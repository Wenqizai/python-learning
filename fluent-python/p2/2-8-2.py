""" 
增量复制运算符 += 和 *= 处理序列

+= 相当于特殊方法： __iadd__
*= 相当于特殊方法： __imul__

+= 和 *= 的运算符重载：
    1. 如果序列实现了 __iadd__ 方法，会调用这个方法，将结果赋值给变量；
    2. 如果序列没有实现 __iadd__ 方法，会调用 __add__ 方法，将结果赋值给变量；
    3. 如果序列没有实现 __add__ 方法，会报错；
    4. *= 的运算符重载：
        1. 如果序列实现了 __imul__ 方法，会调用这个方法，将结果赋值给变量；
        2. 如果序列没有实现 __imul__ 方法，会调用 __mul__ 方法，将结果赋值给变量；
        3. 如果序列没有实现 __mul__ 方法，会报错；

python 调用 id() 返回的是区别这个对象的唯一标识，通常为整数，底层实现为内存地址，当不同的规范实现时，id() 返回的值可能不同，所以不能说 id() 返回的值是内存地址。
"""

l = [1, 2, 3]
print(l)

l += [4, 5, 6]
print(l)

l = [1, 2, 3]
print(id(l))

l *= 2
print(l)
print(id(l))

t = (1, 2, 3)
print(id(t))

t *= 2
print(t)
print(id(t))

